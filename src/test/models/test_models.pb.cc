// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test_models.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "test_models.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace org {
namespace yaorm {
namespace tests {

namespace {

const ::google::protobuf::Descriptor* TestModel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestModel_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChildModel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChildModel_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubChildModel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubChildModel_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_test_5fmodels_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_test_5fmodels_2eproto() {
  protobuf_AddDesc_test_5fmodels_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "test_models.proto");
  GOOGLE_CHECK(file != NULL);
  TestModel_descriptor_ = file->message_type(0);
  static const int TestModel_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestModel, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestModel, display_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestModel, child_model_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestModel, displays_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestModel, sub_children_),
  };
  TestModel_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestModel_descriptor_,
      TestModel::default_instance_,
      TestModel_offsets_,
      -1,
      -1,
      -1,
      sizeof(TestModel),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestModel, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestModel, _is_default_instance_));
  ChildModel_descriptor_ = file->message_type(1);
  static const int ChildModel_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChildModel, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChildModel, child_display_),
  };
  ChildModel_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChildModel_descriptor_,
      ChildModel::default_instance_,
      ChildModel_offsets_,
      -1,
      -1,
      -1,
      sizeof(ChildModel),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChildModel, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChildModel, _is_default_instance_));
  SubChildModel_descriptor_ = file->message_type(2);
  static const int SubChildModel_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubChildModel, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubChildModel, sub_display_),
  };
  SubChildModel_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SubChildModel_descriptor_,
      SubChildModel::default_instance_,
      SubChildModel_offsets_,
      -1,
      -1,
      -1,
      sizeof(SubChildModel),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubChildModel, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubChildModel, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_test_5fmodels_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestModel_descriptor_, &TestModel::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChildModel_descriptor_, &ChildModel::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SubChildModel_descriptor_, &SubChildModel::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_test_5fmodels_2eproto() {
  delete TestModel::default_instance_;
  delete TestModel_reflection_;
  delete ChildModel::default_instance_;
  delete ChildModel_reflection_;
  delete SubChildModel::default_instance_;
  delete SubChildModel_reflection_;
}

void protobuf_AddDesc_test_5fmodels_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_test_5fmodels_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021test_models.proto\022\017org.yaorm.tests\"\242\001\n"
    "\tTestModel\022\n\n\002id\030\001 \001(\t\022\017\n\007display\030\002 \001(\t\022"
    "0\n\013child_model\030\003 \001(\0132\033.org.yaorm.tests.C"
    "hildModel\022\020\n\010displays\030\004 \003(\t\0224\n\014sub_child"
    "ren\030\005 \003(\0132\036.org.yaorm.tests.SubChildMode"
    "l\"/\n\nChildModel\022\n\n\002id\030\001 \001(\t\022\025\n\rchild_dis"
    "play\030\002 \001(\t\"0\n\rSubChildModel\022\n\n\002id\030\001 \001(\t\022"
    "\023\n\013sub_display\030\002 \001(\tb\006proto3", 308);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "test_models.proto", &protobuf_RegisterTypes);
  TestModel::default_instance_ = new TestModel();
  ChildModel::default_instance_ = new ChildModel();
  SubChildModel::default_instance_ = new SubChildModel();
  TestModel::default_instance_->InitAsDefaultInstance();
  ChildModel::default_instance_->InitAsDefaultInstance();
  SubChildModel::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_test_5fmodels_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_test_5fmodels_2eproto {
  StaticDescriptorInitializer_test_5fmodels_2eproto() {
    protobuf_AddDesc_test_5fmodels_2eproto();
  }
} static_descriptor_initializer_test_5fmodels_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestModel::kIdFieldNumber;
const int TestModel::kDisplayFieldNumber;
const int TestModel::kChildModelFieldNumber;
const int TestModel::kDisplaysFieldNumber;
const int TestModel::kSubChildrenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestModel::TestModel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.yaorm.tests.TestModel)
}

void TestModel::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  child_model_ = const_cast< ::org::yaorm::tests::ChildModel*>(&::org::yaorm::tests::ChildModel::default_instance());
}

TestModel::TestModel(const TestModel& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:org.yaorm.tests.TestModel)
}

void TestModel::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  child_model_ = NULL;
}

TestModel::~TestModel() {
  // @@protoc_insertion_point(destructor:org.yaorm.tests.TestModel)
  SharedDtor();
}

void TestModel::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete child_model_;
  }
}

void TestModel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestModel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestModel_descriptor_;
}

const TestModel& TestModel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_5fmodels_2eproto();
  return *default_instance_;
}

TestModel* TestModel::default_instance_ = NULL;

TestModel* TestModel::New(::google::protobuf::Arena* arena) const {
  TestModel* n = new TestModel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestModel::Clear() {
// @@protoc_insertion_point(message_clear_start:org.yaorm.tests.TestModel)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && child_model_ != NULL) delete child_model_;
  child_model_ = NULL;
  displays_.Clear();
  sub_children_.Clear();
}

bool TestModel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.yaorm.tests.TestModel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.yaorm.tests.TestModel.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_display;
        break;
      }

      // optional string display = 2;
      case 2: {
        if (tag == 18) {
         parse_display:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display().data(), this->display().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.yaorm.tests.TestModel.display"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_child_model;
        break;
      }

      // optional .org.yaorm.tests.ChildModel child_model = 3;
      case 3: {
        if (tag == 26) {
         parse_child_model:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_child_model()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_displays;
        break;
      }

      // repeated string displays = 4;
      case 4: {
        if (tag == 34) {
         parse_displays:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_displays()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->displays(this->displays_size() - 1).data(),
            this->displays(this->displays_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.yaorm.tests.TestModel.displays"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_displays;
        if (input->ExpectTag(42)) goto parse_sub_children;
        break;
      }

      // repeated .org.yaorm.tests.SubChildModel sub_children = 5;
      case 5: {
        if (tag == 42) {
         parse_sub_children:
          DO_(input->IncrementRecursionDepth());
         parse_loop_sub_children:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_sub_children()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_sub_children;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.yaorm.tests.TestModel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.yaorm.tests.TestModel)
  return false;
#undef DO_
}

void TestModel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.yaorm.tests.TestModel)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.yaorm.tests.TestModel.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string display = 2;
  if (this->display().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display().data(), this->display().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.yaorm.tests.TestModel.display");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->display(), output);
  }

  // optional .org.yaorm.tests.ChildModel child_model = 3;
  if (this->has_child_model()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->child_model_, output);
  }

  // repeated string displays = 4;
  for (int i = 0; i < this->displays_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->displays(i).data(), this->displays(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.yaorm.tests.TestModel.displays");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->displays(i), output);
  }

  // repeated .org.yaorm.tests.SubChildModel sub_children = 5;
  for (unsigned int i = 0, n = this->sub_children_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->sub_children(i), output);
  }

  // @@protoc_insertion_point(serialize_end:org.yaorm.tests.TestModel)
}

::google::protobuf::uint8* TestModel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.yaorm.tests.TestModel)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.yaorm.tests.TestModel.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string display = 2;
  if (this->display().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display().data(), this->display().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.yaorm.tests.TestModel.display");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->display(), target);
  }

  // optional .org.yaorm.tests.ChildModel child_model = 3;
  if (this->has_child_model()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->child_model_, false, target);
  }

  // repeated string displays = 4;
  for (int i = 0; i < this->displays_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->displays(i).data(), this->displays(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.yaorm.tests.TestModel.displays");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->displays(i), target);
  }

  // repeated .org.yaorm.tests.SubChildModel sub_children = 5;
  for (unsigned int i = 0, n = this->sub_children_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->sub_children(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.yaorm.tests.TestModel)
  return target;
}

int TestModel::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:org.yaorm.tests.TestModel)
  int total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string display = 2;
  if (this->display().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display());
  }

  // optional .org.yaorm.tests.ChildModel child_model = 3;
  if (this->has_child_model()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->child_model_);
  }

  // repeated string displays = 4;
  total_size += 1 * this->displays_size();
  for (int i = 0; i < this->displays_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->displays(i));
  }

  // repeated .org.yaorm.tests.SubChildModel sub_children = 5;
  total_size += 1 * this->sub_children_size();
  for (int i = 0; i < this->sub_children_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sub_children(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestModel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.yaorm.tests.TestModel)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TestModel* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TestModel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.yaorm.tests.TestModel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.yaorm.tests.TestModel)
    MergeFrom(*source);
  }
}

void TestModel::MergeFrom(const TestModel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.yaorm.tests.TestModel)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  displays_.MergeFrom(from.displays_);
  sub_children_.MergeFrom(from.sub_children_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.display().size() > 0) {

    display_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_);
  }
  if (from.has_child_model()) {
    mutable_child_model()->::org::yaorm::tests::ChildModel::MergeFrom(from.child_model());
  }
}

void TestModel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.yaorm.tests.TestModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestModel::CopyFrom(const TestModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.yaorm.tests.TestModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestModel::IsInitialized() const {

  return true;
}

void TestModel::Swap(TestModel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestModel::InternalSwap(TestModel* other) {
  id_.Swap(&other->id_);
  display_.Swap(&other->display_);
  std::swap(child_model_, other->child_model_);
  displays_.UnsafeArenaSwap(&other->displays_);
  sub_children_.UnsafeArenaSwap(&other->sub_children_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestModel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestModel_descriptor_;
  metadata.reflection = TestModel_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestModel

// optional string id = 1;
void TestModel::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TestModel::id() const {
  // @@protoc_insertion_point(field_get:org.yaorm.tests.TestModel.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TestModel::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.yaorm.tests.TestModel.id)
}
 void TestModel::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.yaorm.tests.TestModel.id)
}
 void TestModel::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.yaorm.tests.TestModel.id)
}
 ::std::string* TestModel::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:org.yaorm.tests.TestModel.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TestModel::release_id() {
  // @@protoc_insertion_point(field_release:org.yaorm.tests.TestModel.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TestModel::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:org.yaorm.tests.TestModel.id)
}

// optional string display = 2;
void TestModel::clear_display() {
  display_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TestModel::display() const {
  // @@protoc_insertion_point(field_get:org.yaorm.tests.TestModel.display)
  return display_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TestModel::set_display(const ::std::string& value) {
  
  display_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.yaorm.tests.TestModel.display)
}
 void TestModel::set_display(const char* value) {
  
  display_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.yaorm.tests.TestModel.display)
}
 void TestModel::set_display(const char* value, size_t size) {
  
  display_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.yaorm.tests.TestModel.display)
}
 ::std::string* TestModel::mutable_display() {
  
  // @@protoc_insertion_point(field_mutable:org.yaorm.tests.TestModel.display)
  return display_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TestModel::release_display() {
  // @@protoc_insertion_point(field_release:org.yaorm.tests.TestModel.display)
  
  return display_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TestModel::set_allocated_display(::std::string* display) {
  if (display != NULL) {
    
  } else {
    
  }
  display_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display);
  // @@protoc_insertion_point(field_set_allocated:org.yaorm.tests.TestModel.display)
}

// optional .org.yaorm.tests.ChildModel child_model = 3;
bool TestModel::has_child_model() const {
  return !_is_default_instance_ && child_model_ != NULL;
}
void TestModel::clear_child_model() {
  if (GetArenaNoVirtual() == NULL && child_model_ != NULL) delete child_model_;
  child_model_ = NULL;
}
const ::org::yaorm::tests::ChildModel& TestModel::child_model() const {
  // @@protoc_insertion_point(field_get:org.yaorm.tests.TestModel.child_model)
  return child_model_ != NULL ? *child_model_ : *default_instance_->child_model_;
}
::org::yaorm::tests::ChildModel* TestModel::mutable_child_model() {
  
  if (child_model_ == NULL) {
    child_model_ = new ::org::yaorm::tests::ChildModel;
  }
  // @@protoc_insertion_point(field_mutable:org.yaorm.tests.TestModel.child_model)
  return child_model_;
}
::org::yaorm::tests::ChildModel* TestModel::release_child_model() {
  // @@protoc_insertion_point(field_release:org.yaorm.tests.TestModel.child_model)
  
  ::org::yaorm::tests::ChildModel* temp = child_model_;
  child_model_ = NULL;
  return temp;
}
void TestModel::set_allocated_child_model(::org::yaorm::tests::ChildModel* child_model) {
  delete child_model_;
  child_model_ = child_model;
  if (child_model) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:org.yaorm.tests.TestModel.child_model)
}

// repeated string displays = 4;
int TestModel::displays_size() const {
  return displays_.size();
}
void TestModel::clear_displays() {
  displays_.Clear();
}
 const ::std::string& TestModel::displays(int index) const {
  // @@protoc_insertion_point(field_get:org.yaorm.tests.TestModel.displays)
  return displays_.Get(index);
}
 ::std::string* TestModel::mutable_displays(int index) {
  // @@protoc_insertion_point(field_mutable:org.yaorm.tests.TestModel.displays)
  return displays_.Mutable(index);
}
 void TestModel::set_displays(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:org.yaorm.tests.TestModel.displays)
  displays_.Mutable(index)->assign(value);
}
 void TestModel::set_displays(int index, const char* value) {
  displays_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:org.yaorm.tests.TestModel.displays)
}
 void TestModel::set_displays(int index, const char* value, size_t size) {
  displays_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:org.yaorm.tests.TestModel.displays)
}
 ::std::string* TestModel::add_displays() {
  // @@protoc_insertion_point(field_add_mutable:org.yaorm.tests.TestModel.displays)
  return displays_.Add();
}
 void TestModel::add_displays(const ::std::string& value) {
  displays_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:org.yaorm.tests.TestModel.displays)
}
 void TestModel::add_displays(const char* value) {
  displays_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:org.yaorm.tests.TestModel.displays)
}
 void TestModel::add_displays(const char* value, size_t size) {
  displays_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:org.yaorm.tests.TestModel.displays)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
TestModel::displays() const {
  // @@protoc_insertion_point(field_list:org.yaorm.tests.TestModel.displays)
  return displays_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
TestModel::mutable_displays() {
  // @@protoc_insertion_point(field_mutable_list:org.yaorm.tests.TestModel.displays)
  return &displays_;
}

// repeated .org.yaorm.tests.SubChildModel sub_children = 5;
int TestModel::sub_children_size() const {
  return sub_children_.size();
}
void TestModel::clear_sub_children() {
  sub_children_.Clear();
}
const ::org::yaorm::tests::SubChildModel& TestModel::sub_children(int index) const {
  // @@protoc_insertion_point(field_get:org.yaorm.tests.TestModel.sub_children)
  return sub_children_.Get(index);
}
::org::yaorm::tests::SubChildModel* TestModel::mutable_sub_children(int index) {
  // @@protoc_insertion_point(field_mutable:org.yaorm.tests.TestModel.sub_children)
  return sub_children_.Mutable(index);
}
::org::yaorm::tests::SubChildModel* TestModel::add_sub_children() {
  // @@protoc_insertion_point(field_add:org.yaorm.tests.TestModel.sub_children)
  return sub_children_.Add();
}
::google::protobuf::RepeatedPtrField< ::org::yaorm::tests::SubChildModel >*
TestModel::mutable_sub_children() {
  // @@protoc_insertion_point(field_mutable_list:org.yaorm.tests.TestModel.sub_children)
  return &sub_children_;
}
const ::google::protobuf::RepeatedPtrField< ::org::yaorm::tests::SubChildModel >&
TestModel::sub_children() const {
  // @@protoc_insertion_point(field_list:org.yaorm.tests.TestModel.sub_children)
  return sub_children_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChildModel::kIdFieldNumber;
const int ChildModel::kChildDisplayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChildModel::ChildModel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.yaorm.tests.ChildModel)
}

void ChildModel::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ChildModel::ChildModel(const ChildModel& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:org.yaorm.tests.ChildModel)
}

void ChildModel::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  child_display_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ChildModel::~ChildModel() {
  // @@protoc_insertion_point(destructor:org.yaorm.tests.ChildModel)
  SharedDtor();
}

void ChildModel::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  child_display_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ChildModel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChildModel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChildModel_descriptor_;
}

const ChildModel& ChildModel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_5fmodels_2eproto();
  return *default_instance_;
}

ChildModel* ChildModel::default_instance_ = NULL;

ChildModel* ChildModel::New(::google::protobuf::Arena* arena) const {
  ChildModel* n = new ChildModel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChildModel::Clear() {
// @@protoc_insertion_point(message_clear_start:org.yaorm.tests.ChildModel)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  child_display_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ChildModel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.yaorm.tests.ChildModel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.yaorm.tests.ChildModel.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_child_display;
        break;
      }

      // optional string child_display = 2;
      case 2: {
        if (tag == 18) {
         parse_child_display:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_child_display()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->child_display().data(), this->child_display().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.yaorm.tests.ChildModel.child_display"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.yaorm.tests.ChildModel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.yaorm.tests.ChildModel)
  return false;
#undef DO_
}

void ChildModel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.yaorm.tests.ChildModel)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.yaorm.tests.ChildModel.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string child_display = 2;
  if (this->child_display().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->child_display().data(), this->child_display().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.yaorm.tests.ChildModel.child_display");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->child_display(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.yaorm.tests.ChildModel)
}

::google::protobuf::uint8* ChildModel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.yaorm.tests.ChildModel)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.yaorm.tests.ChildModel.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string child_display = 2;
  if (this->child_display().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->child_display().data(), this->child_display().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.yaorm.tests.ChildModel.child_display");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->child_display(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.yaorm.tests.ChildModel)
  return target;
}

int ChildModel::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:org.yaorm.tests.ChildModel)
  int total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string child_display = 2;
  if (this->child_display().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->child_display());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChildModel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.yaorm.tests.ChildModel)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ChildModel* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ChildModel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.yaorm.tests.ChildModel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.yaorm.tests.ChildModel)
    MergeFrom(*source);
  }
}

void ChildModel::MergeFrom(const ChildModel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.yaorm.tests.ChildModel)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.child_display().size() > 0) {

    child_display_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.child_display_);
  }
}

void ChildModel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.yaorm.tests.ChildModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChildModel::CopyFrom(const ChildModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.yaorm.tests.ChildModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChildModel::IsInitialized() const {

  return true;
}

void ChildModel::Swap(ChildModel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChildModel::InternalSwap(ChildModel* other) {
  id_.Swap(&other->id_);
  child_display_.Swap(&other->child_display_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChildModel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChildModel_descriptor_;
  metadata.reflection = ChildModel_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChildModel

// optional string id = 1;
void ChildModel::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ChildModel::id() const {
  // @@protoc_insertion_point(field_get:org.yaorm.tests.ChildModel.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChildModel::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.yaorm.tests.ChildModel.id)
}
 void ChildModel::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.yaorm.tests.ChildModel.id)
}
 void ChildModel::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.yaorm.tests.ChildModel.id)
}
 ::std::string* ChildModel::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:org.yaorm.tests.ChildModel.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ChildModel::release_id() {
  // @@protoc_insertion_point(field_release:org.yaorm.tests.ChildModel.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChildModel::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:org.yaorm.tests.ChildModel.id)
}

// optional string child_display = 2;
void ChildModel::clear_child_display() {
  child_display_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ChildModel::child_display() const {
  // @@protoc_insertion_point(field_get:org.yaorm.tests.ChildModel.child_display)
  return child_display_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChildModel::set_child_display(const ::std::string& value) {
  
  child_display_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.yaorm.tests.ChildModel.child_display)
}
 void ChildModel::set_child_display(const char* value) {
  
  child_display_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.yaorm.tests.ChildModel.child_display)
}
 void ChildModel::set_child_display(const char* value, size_t size) {
  
  child_display_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.yaorm.tests.ChildModel.child_display)
}
 ::std::string* ChildModel::mutable_child_display() {
  
  // @@protoc_insertion_point(field_mutable:org.yaorm.tests.ChildModel.child_display)
  return child_display_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ChildModel::release_child_display() {
  // @@protoc_insertion_point(field_release:org.yaorm.tests.ChildModel.child_display)
  
  return child_display_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChildModel::set_allocated_child_display(::std::string* child_display) {
  if (child_display != NULL) {
    
  } else {
    
  }
  child_display_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), child_display);
  // @@protoc_insertion_point(field_set_allocated:org.yaorm.tests.ChildModel.child_display)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubChildModel::kIdFieldNumber;
const int SubChildModel::kSubDisplayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubChildModel::SubChildModel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.yaorm.tests.SubChildModel)
}

void SubChildModel::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SubChildModel::SubChildModel(const SubChildModel& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:org.yaorm.tests.SubChildModel)
}

void SubChildModel::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sub_display_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SubChildModel::~SubChildModel() {
  // @@protoc_insertion_point(destructor:org.yaorm.tests.SubChildModel)
  SharedDtor();
}

void SubChildModel::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sub_display_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SubChildModel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubChildModel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubChildModel_descriptor_;
}

const SubChildModel& SubChildModel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_5fmodels_2eproto();
  return *default_instance_;
}

SubChildModel* SubChildModel::default_instance_ = NULL;

SubChildModel* SubChildModel::New(::google::protobuf::Arena* arena) const {
  SubChildModel* n = new SubChildModel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubChildModel::Clear() {
// @@protoc_insertion_point(message_clear_start:org.yaorm.tests.SubChildModel)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sub_display_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SubChildModel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.yaorm.tests.SubChildModel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.yaorm.tests.SubChildModel.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sub_display;
        break;
      }

      // optional string sub_display = 2;
      case 2: {
        if (tag == 18) {
         parse_sub_display:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sub_display()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sub_display().data(), this->sub_display().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.yaorm.tests.SubChildModel.sub_display"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.yaorm.tests.SubChildModel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.yaorm.tests.SubChildModel)
  return false;
#undef DO_
}

void SubChildModel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.yaorm.tests.SubChildModel)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.yaorm.tests.SubChildModel.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string sub_display = 2;
  if (this->sub_display().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sub_display().data(), this->sub_display().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.yaorm.tests.SubChildModel.sub_display");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sub_display(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.yaorm.tests.SubChildModel)
}

::google::protobuf::uint8* SubChildModel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.yaorm.tests.SubChildModel)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.yaorm.tests.SubChildModel.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string sub_display = 2;
  if (this->sub_display().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sub_display().data(), this->sub_display().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.yaorm.tests.SubChildModel.sub_display");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sub_display(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.yaorm.tests.SubChildModel)
  return target;
}

int SubChildModel::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:org.yaorm.tests.SubChildModel)
  int total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string sub_display = 2;
  if (this->sub_display().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sub_display());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubChildModel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.yaorm.tests.SubChildModel)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SubChildModel* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SubChildModel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.yaorm.tests.SubChildModel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.yaorm.tests.SubChildModel)
    MergeFrom(*source);
  }
}

void SubChildModel::MergeFrom(const SubChildModel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.yaorm.tests.SubChildModel)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.sub_display().size() > 0) {

    sub_display_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sub_display_);
  }
}

void SubChildModel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.yaorm.tests.SubChildModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubChildModel::CopyFrom(const SubChildModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.yaorm.tests.SubChildModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubChildModel::IsInitialized() const {

  return true;
}

void SubChildModel::Swap(SubChildModel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubChildModel::InternalSwap(SubChildModel* other) {
  id_.Swap(&other->id_);
  sub_display_.Swap(&other->sub_display_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubChildModel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubChildModel_descriptor_;
  metadata.reflection = SubChildModel_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubChildModel

// optional string id = 1;
void SubChildModel::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SubChildModel::id() const {
  // @@protoc_insertion_point(field_get:org.yaorm.tests.SubChildModel.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SubChildModel::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.yaorm.tests.SubChildModel.id)
}
 void SubChildModel::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.yaorm.tests.SubChildModel.id)
}
 void SubChildModel::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.yaorm.tests.SubChildModel.id)
}
 ::std::string* SubChildModel::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:org.yaorm.tests.SubChildModel.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SubChildModel::release_id() {
  // @@protoc_insertion_point(field_release:org.yaorm.tests.SubChildModel.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SubChildModel::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:org.yaorm.tests.SubChildModel.id)
}

// optional string sub_display = 2;
void SubChildModel::clear_sub_display() {
  sub_display_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SubChildModel::sub_display() const {
  // @@protoc_insertion_point(field_get:org.yaorm.tests.SubChildModel.sub_display)
  return sub_display_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SubChildModel::set_sub_display(const ::std::string& value) {
  
  sub_display_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.yaorm.tests.SubChildModel.sub_display)
}
 void SubChildModel::set_sub_display(const char* value) {
  
  sub_display_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.yaorm.tests.SubChildModel.sub_display)
}
 void SubChildModel::set_sub_display(const char* value, size_t size) {
  
  sub_display_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.yaorm.tests.SubChildModel.sub_display)
}
 ::std::string* SubChildModel::mutable_sub_display() {
  
  // @@protoc_insertion_point(field_mutable:org.yaorm.tests.SubChildModel.sub_display)
  return sub_display_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SubChildModel::release_sub_display() {
  // @@protoc_insertion_point(field_release:org.yaorm.tests.SubChildModel.sub_display)
  
  return sub_display_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SubChildModel::set_allocated_sub_display(::std::string* sub_display) {
  if (sub_display != NULL) {
    
  } else {
    
  }
  sub_display_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sub_display);
  // @@protoc_insertion_point(field_set_allocated:org.yaorm.tests.SubChildModel.sub_display)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace tests
}  // namespace yaorm
}  // namespace org

// @@protoc_insertion_point(global_scope)
